{
	"id": 5921,
	"name": "gravwell",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 5922,
			"name": "config",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5954,
					"name": "TEST_ASSETS_PATH",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5942
				},
				{
					"id": 5926,
					"name": "TestType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 33,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "unit"
							},
							{
								"type": "literal",
								"value": "integration"
							}
						]
					}
				},
				{
					"id": 5924,
					"name": "TEST_AUTH_TOKEN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 16,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"defaultValue": "..."
				},
				{
					"id": 5925,
					"name": "TEST_BASE_API_CONTEXT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "APIContext"
					},
					"defaultValue": "..."
				},
				{
					"id": 5923,
					"name": "TEST_HOST",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 14,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 5927,
					"name": "TEST_TYPES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 34,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 5926,
							"name": "TestType"
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						5954
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						5926
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5924,
						5925,
						5923,
						5927
					]
				}
			],
			"sources": [
				{
					"fileName": "config.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5928,
			"name": "custom-matchers",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5929,
					"name": "myCustomMatchers",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "custom-matchers.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "jasmine.CustomMatcherFactories",
						"package": "@types/jasmine",
						"name": "jasmine.CustomMatcherFactories"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5929
					]
				}
			],
			"sources": [
				{
					"fileName": "custom-matchers.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5934,
			"name": "get-env-var",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5935,
					"name": "getEnvVar",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "get-env-var.ts",
							"line": 9,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5936,
							"name": "getEnvVar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Copyright 2022 Gravwell, Inc. All rights reserved.\nContact: <legal@gravwell.io>",
								"text": "This software may be modified and distributed under the terms of the\nMIT license. See the LICENSE file for details.\n"
							},
							"parameters": [
								{
									"id": 5937,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5935
					]
				}
			],
			"sources": [
				{
					"fileName": "get-env-var.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5930,
			"name": "get-env-var.node",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5931,
					"name": "getEnvVar",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "get-env-var.node.ts",
							"line": 13,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5932,
							"name": "getEnvVar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5933,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5931
					]
				}
			],
			"sources": [
				{
					"fileName": "get-env-var.node.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5938,
			"name": "index",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5960,
					"name": "TEST_ASSETS_PATH",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5942
				},
				{
					"id": 5956,
					"name": "TEST_AUTH_TOKEN",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5924
				},
				{
					"id": 5957,
					"name": "TEST_BASE_API_CONTEXT",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5925
				},
				{
					"id": 5955,
					"name": "TEST_HOST",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5923
				},
				{
					"id": 5959,
					"name": "TEST_TYPES",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5927
				},
				{
					"id": 5958,
					"name": "TestType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5926
				},
				{
					"id": 5962,
					"name": "integrationTest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5944
				},
				{
					"id": 5961,
					"name": "myCustomMatchers",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5929
				},
				{
					"id": 5964,
					"name": "sleep",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5951
				},
				{
					"id": 5963,
					"name": "unitTest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5947
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						5960,
						5956,
						5957,
						5955,
						5959,
						5958,
						5962,
						5961,
						5964,
						5963
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5941,
			"name": "paths",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5942,
					"name": "TEST_ASSETS_PATH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Copyright 2022 Gravwell, Inc. All rights reserved.\nContact: <legal@gravwell.io>",
						"text": "This software may be modified and distributed under the terms of the\nMIT license. See the LICENSE file for details.\n"
					},
					"sources": [
						{
							"fileName": "paths.ts",
							"line": 9,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					},
					"defaultValue": "null"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5942
					]
				}
			],
			"sources": [
				{
					"fileName": "paths.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5939,
			"name": "paths.node",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5940,
					"name": "TEST_ASSETS_PATH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "paths.node.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5940
					]
				}
			],
			"sources": [
				{
					"fileName": "paths.node.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5943,
			"name": "test-types",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5944,
					"name": "integrationTest",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "test-types.ts",
							"line": 18,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5945,
							"name": "integrationTest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5946,
									"name": "assertion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "jasmine.ImplementationCallback",
												"package": "@types/jasmine",
												"name": "ImplementationCallback"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"qualifiedName": "jasmine.ImplementationCallback",
										"package": "@types/jasmine",
										"name": "ImplementationCallback"
									}
								]
							}
						}
					]
				},
				{
					"id": 5947,
					"name": "unitTest",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "test-types.ts",
							"line": 19,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5948,
							"name": "unitTest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5949,
									"name": "assertion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "jasmine.ImplementationCallback",
												"package": "@types/jasmine",
												"name": "ImplementationCallback"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"qualifiedName": "jasmine.ImplementationCallback",
										"package": "@types/jasmine",
										"name": "ImplementationCallback"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5944,
						5947
					]
				}
			],
			"sources": [
				{
					"fileName": "test-types.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5950,
			"name": "utils",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Copyright 2022 Gravwell, Inc. All rights reserved.\nContact: <legal@gravwell.io>",
				"text": "This software may be modified and distributed under the terms of the\nMIT license. See the LICENSE file for details.\n"
			},
			"children": [
				{
					"id": 5951,
					"name": "sleep",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils.ts",
							"line": 19,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5952,
							"name": "sleep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "A delay function to use while testing.",
								"text": "```ts\n// sleep for a second\nawait sleep(1000);\n```\n"
							},
							"parameters": [
								{
									"id": 5953,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The number of milliseconds to wait\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5951
					]
				}
			],
			"sources": [
				{
					"fileName": "utils.ts",
					"line": 19,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				5922,
				5928,
				5934,
				5930,
				5938,
				5941,
				5939,
				5943,
				5950
			]
		}
	]
}