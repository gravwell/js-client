{
	"id": 5971,
	"name": "gravwell",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 5972,
			"name": "config",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 6004,
					"name": "TEST_ASSETS_PATH",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5992
				},
				{
					"id": 5976,
					"name": "TestType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 33,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "unit"
							},
							{
								"type": "literal",
								"value": "integration"
							}
						]
					}
				},
				{
					"id": 5974,
					"name": "TEST_AUTH_TOKEN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 16,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"defaultValue": "..."
				},
				{
					"id": 5975,
					"name": "TEST_BASE_API_CONTEXT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "APIContext"
					},
					"defaultValue": "..."
				},
				{
					"id": 5973,
					"name": "TEST_HOST",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 14,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 5977,
					"name": "TEST_TYPES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 34,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 5976,
							"name": "TestType"
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						6004
					]
				},
				{
					"title": "Type Aliases",
					"kind": 4194304,
					"children": [
						5976
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5974,
						5975,
						5973,
						5977
					]
				}
			],
			"sources": [
				{
					"fileName": "config.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5978,
			"name": "custom-matchers",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5979,
					"name": "myCustomMatchers",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "custom-matchers.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "jasmine.CustomMatcherFactories",
						"package": "@types/jasmine",
						"name": "jasmine.CustomMatcherFactories"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5979
					]
				}
			],
			"sources": [
				{
					"fileName": "custom-matchers.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5984,
			"name": "get-env-var",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5985,
					"name": "getEnvVar",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "get-env-var.ts",
							"line": 9,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5986,
							"name": "getEnvVar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Copyright 2022 Gravwell, Inc. All rights reserved.\nContact: <legal@gravwell.io>",
								"text": "This software may be modified and distributed under the terms of the\nMIT license. See the LICENSE file for details.\n"
							},
							"parameters": [
								{
									"id": 5987,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5985
					]
				}
			],
			"sources": [
				{
					"fileName": "get-env-var.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5980,
			"name": "get-env-var.node",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5981,
					"name": "getEnvVar",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "get-env-var.node.ts",
							"line": 13,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5982,
							"name": "getEnvVar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5983,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5981
					]
				}
			],
			"sources": [
				{
					"fileName": "get-env-var.node.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5988,
			"name": "index",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 6010,
					"name": "TEST_ASSETS_PATH",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5992
				},
				{
					"id": 6006,
					"name": "TEST_AUTH_TOKEN",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5974
				},
				{
					"id": 6007,
					"name": "TEST_BASE_API_CONTEXT",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5975
				},
				{
					"id": 6005,
					"name": "TEST_HOST",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5973
				},
				{
					"id": 6009,
					"name": "TEST_TYPES",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5977
				},
				{
					"id": 6008,
					"name": "TestType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5976
				},
				{
					"id": 6012,
					"name": "integrationTest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5994
				},
				{
					"id": 6011,
					"name": "myCustomMatchers",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5979
				},
				{
					"id": 6014,
					"name": "sleep",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 6001
				},
				{
					"id": 6013,
					"name": "unitTest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 5997
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						6010,
						6006,
						6007,
						6005,
						6009,
						6008,
						6012,
						6011,
						6014,
						6013
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5991,
			"name": "paths",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5992,
					"name": "TEST_ASSETS_PATH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Copyright 2022 Gravwell, Inc. All rights reserved.\nContact: <legal@gravwell.io>",
						"text": "This software may be modified and distributed under the terms of the\nMIT license. See the LICENSE file for details.\n"
					},
					"sources": [
						{
							"fileName": "paths.ts",
							"line": 9,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					},
					"defaultValue": "null"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5992
					]
				}
			],
			"sources": [
				{
					"fileName": "paths.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5989,
			"name": "paths.node",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5990,
					"name": "TEST_ASSETS_PATH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "paths.node.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5990
					]
				}
			],
			"sources": [
				{
					"fileName": "paths.node.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 5993,
			"name": "test-types",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5994,
					"name": "integrationTest",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "test-types.ts",
							"line": 18,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5995,
							"name": "integrationTest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5996,
									"name": "assertion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "jasmine.ImplementationCallback",
												"package": "@types/jasmine",
												"name": "ImplementationCallback"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"qualifiedName": "jasmine.ImplementationCallback",
										"package": "@types/jasmine",
										"name": "ImplementationCallback"
									}
								]
							}
						}
					]
				},
				{
					"id": 5997,
					"name": "unitTest",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "test-types.ts",
							"line": 19,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 5998,
							"name": "unitTest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5999,
									"name": "assertion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "jasmine.ImplementationCallback",
												"package": "@types/jasmine",
												"name": "ImplementationCallback"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"qualifiedName": "jasmine.ImplementationCallback",
										"package": "@types/jasmine",
										"name": "ImplementationCallback"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5994,
						5997
					]
				}
			],
			"sources": [
				{
					"fileName": "test-types.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 6000,
			"name": "utils",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Copyright 2022 Gravwell, Inc. All rights reserved.\nContact: <legal@gravwell.io>",
				"text": "This software may be modified and distributed under the terms of the\nMIT license. See the LICENSE file for details.\n"
			},
			"children": [
				{
					"id": 6001,
					"name": "sleep",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils.ts",
							"line": 19,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 6002,
							"name": "sleep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "A delay function to use while testing.",
								"text": "```ts\n// sleep for a second\nawait sleep(1000);\n```\n"
							},
							"parameters": [
								{
									"id": 6003,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The number of milliseconds to wait\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						6001
					]
				}
			],
			"sources": [
				{
					"fileName": "utils.ts",
					"line": 19,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				5972,
				5978,
				5984,
				5980,
				5988,
				5991,
				5989,
				5993,
				6000
			]
		}
	]
}